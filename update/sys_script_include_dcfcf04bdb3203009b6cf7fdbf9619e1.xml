<?xml version="1.0" encoding="UTF-8"?>
<record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>package_private</access>
        <active>true</active>
        <api_name>x_16255_cmdb_sync.Util</api_name>
        <client_callable>false</client_callable>
        <description>Utility methods reside here.</description>
        <name>Util</name>
        <script><![CDATA[var Util = Class.create();
Util.prototype = {
    initialize: function() {
    },
	
	tables: {
		source: 'x_16255_cmdb_sync_source'
	},

    type: 'Util',
	
	insertOrUpdateTag: function (tagObject) {
		// gs.info(JSON.stringify(tagObject));
	},
	
	syncTags: function (sourceGr) {		
		if (sourceGr == undefined) {
			sourceGr = new GlideRecord(this.tables.source);
			sourceGr.addQuery('sync_tags', true);
			sourceGr.query();
		}
		
		while (sourceGr.next()) {
			gs.info('Syncing tags from source "' + sourceGr.name + '".');
			
			var client = new x_16255_cmdb_sync.Client(sourceGr);
			var lastId;
			var hasMoreRecords = true;
			
			while (hasMoreRecords) {
				var xml = client.getTags(lastId);

				if (xml != null) {
					// parse xml and add/update tags in table
					var count = xml.getNodeText('ServiceResponse/count');
					hasMoreRecords = xml.getNodeText('ServiceResponse/hasMoreRecords');
					
					gs.info('Received ' + count + ' tags from source "' + sourceGr.name + '".');

					var tag = xml.getFirstNode('//data/Tag') || false;

					while(tag) {
						var childIterator = tag.getChildNodeIterator(); // interator over children of 'Tag'
						var fieldsToParse = ['id', 'name', 'ruleType'];
						var tagObject = {};

						while (childIterator.hasNext()) {
							var childNode = childIterator.next();
							var nodeName = childNode.getNodeName();

							if (fieldsToParse.indexOf(nodeName) > -1) {
								tagObject[nodeName] = childNode.getTextContent();
							}
						} // while - child

						this.insertOrUpdateTag(tagObject);
						tag = xml.getNextNode(tag);
					} // while
				} // if
				
				if (hasMoreRecords == 'false') {
					hasMoreRecords = false;
					gs.info('Pulled all tags from source "' + sourceGr.name + '".' );
				}
				else {
					hasMoreRecords = true;
					lastId = xml.getNodeText('ServiceResponse/lastId');
					gs.info('Source "' + sourceGr.name + '" has more tags to pull. Pulled tags until id ' + lastId);
				}
			}
			
			gs.info('Tag sync from source "' + sourceGr.name + '" completed.');
		} // while
	}, // syncTags
};]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2017-12-07 07:15:12</sys_created_on>
        <sys_id>dcfcf04bdb3203009b6cf7fdbf9619e1</sys_id>
        <sys_mod_count>28</sys_mod_count>
        <sys_name>Util</sys_name>
        <sys_package display_value="Sync App" source="x_16255_cmdb_sync">8b8f5740dbb203009b6cf7fdbf9619b6</sys_package>
        <sys_policy>read</sys_policy>
        <sys_scope display_value="Sync App">8b8f5740dbb203009b6cf7fdbf9619b6</sys_scope>
        <sys_update_name>sys_script_include_dcfcf04bdb3203009b6cf7fdbf9619e1</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2017-12-07 12:00:59</sys_updated_on>
    </sys_script_include>
</record_update>
